// <auto-generated />
using System;
using Bit.Infrastructure.EntityFramework;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Bit.Core.Migrations.SqliteDatabase
{
    [DbContext(typeof(SqliteDatabaseContext))]
    partial class SqliteDatabaseContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.4");

            modelBuilder.Entity("Bit.Infrastructure.EntityFramework.Models.Cipher", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Attachments")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Data")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Favorites")
                        .HasColumnType("TEXT");

                    b.Property<string>("Folders")
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("OrganizationId")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("RevisionDate")
                        .HasColumnType("TEXT");

                    b.Property<byte>("Type")
                        .HasColumnType("INTEGER");

                    b.Property<Guid?>("UserId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("OrganizationId");

                    b.HasIndex("UserId");

                    b.ToTable("Cipher");
                });

            modelBuilder.Entity("Bit.Infrastructure.EntityFramework.Models.Collection", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("ExternalId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("OrganizationId")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("RevisionDate")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("OrganizationId");

                    b.ToTable("Collection");
                });

            modelBuilder.Entity("Bit.Infrastructure.EntityFramework.Models.CollectionCipher", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<Guid>("CipherId")
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("CipherId1")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("CollectionId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("CipherId");

                    b.HasIndex("CipherId1");

                    b.HasIndex("CollectionId");

                    b.ToTable("CollectionCipher");
                });

            modelBuilder.Entity("Bit.Infrastructure.EntityFramework.Models.CollectionUser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<Guid>("CollectionId")
                        .HasColumnType("TEXT");

                    b.Property<bool>("HidePasswords")
                        .HasColumnType("INTEGER");

                    b.Property<Guid>("OrganizationUserId")
                        .HasColumnType("TEXT");

                    b.Property<bool>("ReadOnly")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("CollectionId");

                    b.HasIndex("OrganizationUserId");

                    b.ToTable("CollectionUser");
                });

            modelBuilder.Entity("Bit.Infrastructure.EntityFramework.Models.Organization", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("ApiKey")
                        .HasColumnType("TEXT");

                    b.Property<string>("BillingEmail")
                        .HasColumnType("TEXT");

                    b.Property<string>("BusinessAddress1")
                        .HasColumnType("TEXT");

                    b.Property<string>("BusinessAddress2")
                        .HasColumnType("TEXT");

                    b.Property<string>("BusinessAddress3")
                        .HasColumnType("TEXT");

                    b.Property<string>("BusinessCountry")
                        .HasColumnType("TEXT");

                    b.Property<string>("BusinessName")
                        .HasColumnType("TEXT");

                    b.Property<string>("BusinessTaxNumber")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("TEXT");

                    b.Property<bool>("Enabled")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("ExpirationDate")
                        .HasColumnType("TEXT");

                    b.Property<byte?>("Gateway")
                        .HasColumnType("INTEGER");

                    b.Property<string>("GatewayCustomerId")
                        .HasColumnType("TEXT");

                    b.Property<string>("GatewaySubscriptionId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Identifier")
                        .HasColumnType("TEXT");

                    b.Property<string>("LicenseKey")
                        .HasColumnType("TEXT");

                    b.Property<short?>("MaxCollections")
                        .HasColumnType("INTEGER");

                    b.Property<short?>("MaxStorageGb")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<string>("Plan")
                        .HasColumnType("TEXT");

                    b.Property<byte>("PlanType")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ReferenceData")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("RevisionDate")
                        .HasColumnType("TEXT");

                    b.Property<short?>("Seats")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("SelfHost")
                        .HasColumnType("INTEGER");

                    b.Property<long?>("Storage")
                        .HasColumnType("INTEGER");

                    b.Property<string>("TwoFactorProviders")
                        .HasColumnType("TEXT");

                    b.Property<bool>("Use2fa")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("UseApi")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("UseDirectory")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("UseEvents")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("UseGroups")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("UsePolicies")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("UseSso")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("UseTotp")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("UsersGetPremium")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Organization");
                });

            modelBuilder.Entity("Bit.Infrastructure.EntityFramework.Models.OrganizationUser", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<bool>("AccessAll")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .HasColumnType("TEXT");

                    b.Property<string>("ExternalId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Key")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("OrganizationId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Permissions")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("RevisionDate")
                        .HasColumnType("TEXT");

                    b.Property<byte>("Status")
                        .HasColumnType("INTEGER");

                    b.Property<byte>("Type")
                        .HasColumnType("INTEGER");

                    b.Property<Guid?>("UserId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("OrganizationId");

                    b.HasIndex("UserId");

                    b.ToTable("OrganizationUser");
                });

            modelBuilder.Entity("Bit.Infrastructure.EntityFramework.Models.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("AccountRevisionDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("ApiKey")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Culture")
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .HasColumnType("TEXT");

                    b.Property<bool>("EmailVerified")
                        .HasColumnType("INTEGER");

                    b.Property<string>("EquivalentDomains")
                        .HasColumnType("TEXT");

                    b.Property<string>("ExcludedGlobalEquivalentDomains")
                        .HasColumnType("TEXT");

                    b.Property<byte?>("Gateway")
                        .HasColumnType("INTEGER");

                    b.Property<string>("GatewayCustomerId")
                        .HasColumnType("TEXT");

                    b.Property<string>("GatewaySubscriptionId")
                        .HasColumnType("TEXT");

                    b.Property<byte>("Kdf")
                        .HasColumnType("INTEGER");

                    b.Property<int>("KdfIterations")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Key")
                        .HasColumnType("TEXT");

                    b.Property<string>("LicenseKey")
                        .HasColumnType("TEXT");

                    b.Property<string>("MasterPassword")
                        .HasColumnType("TEXT");

                    b.Property<string>("MasterPasswordHint")
                        .HasColumnType("TEXT");

                    b.Property<short?>("MaxStorageGb")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<bool>("Premium")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("PremiumExpirationDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("PrivateKey")
                        .HasColumnType("TEXT");

                    b.Property<string>("PublicKey")
                        .HasColumnType("TEXT");

                    b.Property<string>("ReferenceData")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("RenewalReminderDate")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("RevisionDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("TEXT");

                    b.Property<long?>("Storage")
                        .HasColumnType("INTEGER");

                    b.Property<string>("TwoFactorProviders")
                        .HasColumnType("TEXT");

                    b.Property<string>("TwoFactorRecoveryCode")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("User");
                });

            modelBuilder.Entity("Bit.Core.Models.Device", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Identifier")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<string>("PushToken")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("RevisionDate")
                        .HasColumnType("TEXT");

                    b.Property<short>("Type")
                        .HasColumnType("INTEGER");

                    b.Property<Guid>("UserId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Device");
                });

            modelBuilder.Entity("Bit.Core.Models.Grant", b =>
                {
                    b.Property<string>("Key")
                        .HasColumnType("TEXT");

                    b.Property<string>("ClientId")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("ConsumedDate")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Data")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("ExpirationDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("SessionId")
                        .HasColumnType("TEXT");

                    b.Property<string>("SubjectId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Type")
                        .HasColumnType("TEXT");

                    b.HasKey("Key");

                    b.ToTable("Grant");
                });

            modelBuilder.Entity("Bit.Infrastructure.EntityFramework.Models.Cipher", b =>
                {
                    b.HasOne("Bit.Infrastructure.EntityFramework.Models.Organization", "Organization")
                        .WithMany("Ciphers")
                        .HasForeignKey("OrganizationId");

                    b.HasOne("Bit.Infrastructure.EntityFramework.Models.User", "User")
                        .WithMany("Ciphers")
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("Bit.Infrastructure.EntityFramework.Models.Collection", b =>
                {
                    b.HasOne("Bit.Infrastructure.EntityFramework.Models.Organization", "Organization")
                        .WithMany()
                        .HasForeignKey("OrganizationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Bit.Infrastructure.EntityFramework.Models.CollectionCipher", b =>
                {
                    b.HasOne("Bit.Infrastructure.EntityFramework.Models.Cipher", "Cipher")
                        .WithMany()
                        .HasForeignKey("CipherId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Bit.Infrastructure.EntityFramework.Models.Cipher", null)
                        .WithMany("CollectionCiphers")
                        .HasForeignKey("CipherId1");

                    b.HasOne("Bit.Infrastructure.EntityFramework.Models.Collection", "Collection")
                        .WithMany()
                        .HasForeignKey("CollectionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Bit.Infrastructure.EntityFramework.Models.CollectionUser", b =>
                {
                    b.HasOne("Bit.Infrastructure.EntityFramework.Models.Collection", "Collection")
                        .WithMany()
                        .HasForeignKey("CollectionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Bit.Infrastructure.EntityFramework.Models.OrganizationUser", "OrganizationUser")
                        .WithMany()
                        .HasForeignKey("OrganizationUserId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();
                });

            modelBuilder.Entity("Bit.Infrastructure.EntityFramework.Models.OrganizationUser", b =>
                {
                    b.HasOne("Bit.Infrastructure.EntityFramework.Models.Organization", "Organization")
                        .WithMany()
                        .HasForeignKey("OrganizationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Bit.Infrastructure.EntityFramework.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId");
                });
#pragma warning restore 612, 618
        }
    }
}
